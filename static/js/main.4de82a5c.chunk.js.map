{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["MAIN_URL","getUser","userId","fetch","then","responce","json","users","data","TodoList","state","initialTodos","todos","todoStateSelection","filteredByState","showSelectedState","value","setState","filter","todo","completed","searchTodo","trim","title","includes","changeTodoState","todoId","todoIndex","todoToChange","find","index","id","todosToChange","sort","todo1","todo2","this","className","htmlFor","type","placeholder","onChange","event","target","map","key","readOnly","checked","onClick","props","setUserId","React","Component","CurrentUser","userName","userEmail","userPhone","user","name","email","phone","prevProps","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4de82a5c.chunk.js","sourcesContent":["const MAIN_URL = 'https://mate-api.herokuapp.com';\n\nexport const getTodos = () => fetch(`${MAIN_URL}/todos`)\n  .then(responce => responce.json())\n  .then(todos => todos.data);\n\nexport const getUser = userId => fetch(`${MAIN_URL}/users/${userId}`)\n  .then(responce => responce.json())\n  .then(users => users.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTodos } from '../../api/api';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    initialTodos: [],\n    todos: [],\n    todoStateSelection: '',\n    filteredByState: null,\n  }\n\n  componentDidMount() {\n    getTodos().then((data) => {\n      const todos = data\n        .filter(todo => todo.title && todo.id && todo.userId)\n        .sort((todo1, todo2) => todo1.userId - todo2.userId);\n\n      this.setState({\n        initialTodos: todos,\n        todos: [...todos],\n      });\n    });\n  }\n\n  showSelectedState = (value) => {\n    if (value) {\n      this.setState(state => ({\n        todoStateSelection: value,\n        filteredByState: state.todos\n          .filter(todo => todo.completed === !(+value)),\n      }));\n    } else {\n      this.setState({\n        todoStateSelection: '',\n        filteredByState: null,\n      });\n    }\n  }\n\n  searchTodo = (value) => {\n    if (value.trim()) {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.title.includes(value)),\n      }));\n    } else {\n      this.setState(state => ({ todos: state.initialTodos }));\n    }\n\n    this.showSelectedState(this.state.todoStateSelection);\n  }\n\n  changeTodoState = (todoId) => {\n    let todoIndex;\n    const todoToChange = this.state.todos.find((todo, index) => {\n      todoIndex = index;\n\n      return (todo.id === todoId);\n    });\n\n    todoToChange.completed = !todoToChange.completed;\n    const todosToChange = this.state.todos;\n\n    todosToChange[todoIndex] = todoToChange;\n    this.setState(() => ({ todos: todosToChange }));\n\n    this.showSelectedState(this.state.todoStateSelection);\n  }\n\n  render() {\n    const { todos, filteredByState } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__inputContainer\">\n          <label htmlFor=\"filterInput\">Filter:</label>\n          <input\n            type=\"text\"\n            id=\"filterInput\"\n            className=\"TodoList__inputField\"\n            placeholder=\"Enter the title\"\n            onChange={event => this.searchTodo(event.target.value)}\n          />\n        </div>\n\n        <div className=\"TodoList__inputContainer\">\n          <label htmlFor=\"statusSelector\">\n            Select status\n          </label>\n          <select\n            id=\"statusSelector\"\n            className=\"TodoList__inputSelection\"\n            onChange={event => this.showSelectedState(event.target.value)}\n          >\n            <option value=\"\">All</option>\n            <option value=\"1\">Active</option>\n            <option value=\"0\">Completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {(filteredByState || todos).map(todo => (\n              <li\n                key={todo.id}\n                className=\"TodoList__item TodoList__item--unchecked\"\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                    onClick={() => this.changeTodoState(todo.id)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => this.props.setUserId(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  setUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    userId: '',\n    userName: '',\n    userEmail: '',\n    userPhone: '',\n  };\n\n  componentDidMount() {\n    if (this.props.userId !== 0) {\n      getUser(this.props.userId).then(user => (\n        this.setState({\n          userId: user.id,\n          userName: user.name,\n          userEmail: user.email,\n          userPhone: user.phone,\n        })\n      ));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      getUser(this.props.userId).then(user => (\n        this.setState({\n          userId: user.id,\n          userName: user.name,\n          userEmail: user.email,\n          userPhone: user.phone,\n        })\n      ));\n    }\n  }\n\n  render() {\n    const {\n      userId,\n      userName,\n      userEmail,\n      userPhone,\n    } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${userId}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{userName}</h3>\n        <p className=\"CurrentUser__email\">{userEmail}</p>\n        <p className=\"CurrentUser__phone\">{userPhone}</p>\n        <button\n          type=\"button\"\n          onClick={() => this.props.setUserId(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  setUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { CurrentUser } from './components/CurrentUser/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  setUserId = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            setUserId={this.setUserId}\n          />\n        </div>\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                setUserId={this.setUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}